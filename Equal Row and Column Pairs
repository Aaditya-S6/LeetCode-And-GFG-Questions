// Given a 0-indexed n x n integer matrix grid, return the number of pairs (ri, cj) such that row ri and column cj are equal.

// A row and column pair is considered equal if they contain the same elements in the same order (i.e., an equal array).

 

// Example 1:


// Input: grid = [[3,2,1],[1,7,6],[2,7,7]]
// Output: 1
// Explanation: There is 1 equal row and column pair:
// - (Row 2, Column 1): [2,7,7]



class Solution {
    public int equalPairs(int[][] grid) {
         int n=grid.length;
         int ans=0;
         for(int i=0;i<n;i++){
             for(int j=0;j<n;j++){
                 if(isEqual(grid,i,j)){
                     ans++;
                 }
             }
         }
         return ans;
        
    }
    public static boolean isEqual(int [][] grid,int i,int j){
        int n=grid.length;
        for(int x=0;x<n;x++){
            if(grid[i][x]!=grid[x][j]){
                return false;
            }
        }
        return true;
        
    }
}